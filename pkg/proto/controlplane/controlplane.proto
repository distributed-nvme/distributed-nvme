syntax = "proto3";

option go_package = "github.com/distributed-nvme/distributed-nvme/pkg/proto/controlplane";

package controlplane;

service ExternalApi {
  rpc CreateCluster(CreateClusterRequest) returns(CreateClusterReply) {}
  rpc DeleteCluster(DeleteClusterRequest) returns(DeleteClusterReply) {}
  rpc GetCluster(GetClusterRequest) returns(GetClusterReply) {}

  rpc CreateDn(CreateDnRequest) returns(CreateDnReply) {}
  rpc DeleteDn(DeleteDnRequest) returns(DeleteDnReply) {}
  rpc GetDn(GetDnRequest) returns(GetDnReply) {}
  rpc ListDn(ListDnRequest) returns(ListDnReply) {}
  // rpc ModifyDn(ModifyDnRequest) returns(ModifyDnReply) {}
  // rpc SearchDn(SearchDnRequest) returns(SearchDnReply) {}
}

service DiskNodeWorker {
  rpc AllocateDn(AllocateDnRequest) returns(AllocateDnReply) {}
  rpc SummarizeDn(SummarizeDnRequest) returns(SummarizeDnReply) {}
  rpc FilterDn(FilterDnRequest) returns(FilterDnReply) {}
}

message Tag {
  string key = 1;
  string value = 2;
}

message AllocateConf {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
  string distinguish_key = 3;
}

message QosFields {
  uint64 rbps = 1;
  uint64 wbps = 2;
  uint64 riops = 3;
  uint64 wiops = 4;
}

enum NvmeSeqCh {
  NVME_SEQ_CH_NOT_SPECIFIED = 0;
  NVME_SEQ_CH_REQUIRED = 1;
  NVME_SEQ_CH_NOT_REQUIRED = 2;
}

message NvmeTReq {
  NvmeSeqCh seq_ch = 1;
}

message NvmeListener {
  string tr_type = 1;
  string adr_fam = 2;
  string tr_addr = 3;
  string tr_svc_id = 4;
}

message NvmePortConf {
  uint32 port_num = 1;
  NvmeListener nvme_listener = 2;
  NvmeTReq tr_eq = 3;
}

enum RedunType {
  REDUN_RAID1 = 0;
  REDUN_RAID5_LA = 1;
  REDUN_RAID5_RA = 2;
  REDUN_RAID5_LS = 3;
  REDUN_RAID5_RS = 4;
  REDUN_RAID6_ZR = 5;
  REDUN_RAID6_NR = 6;
  REDUN_RAID6_NC = 7;
}

enum RedunJournalMode {
  REDUN_JOURNAL_NONE = 0;
  REDUN_JOURNAL_WRITEBACK = 1;
  REDUN_JOURNAL_WRITETHROUGH = 2;
}

message RedundancyConf {
  RedunType redun_type = 1;
  uint32 region_size = 2;
  uint32 chunk_size = 3;
  uint32 daemon_sleep = 4;
  uint32 min_recovery_rate = 5;
  uint32 max_recovery_rate = 6;
  uint32 stripe_cache = 7;
  RedunJournalMode journal_mode = 8;
}

message StripeConf {
  uint32 stripe_size = 1;
}

message ThinPoolConf {
  uint32 data_block_size = 1;
  uint32 low_water_mark = 2;
}

message ThinInfo {
  bool fail = 1;
}

message CloneConf {
  uint32 region_size = 1;
  uint32 hydration_threshold = 2;
  uint32 hydration_batch_size = 3;
}

message CloneInfo {
  uint32 metadata_block_size = 1;
  uint32 used_metadata_blocks = 2;
  uint32 total_metadata_blocks = 3;
  uint32 hydrated_regions = 4;
  uint32 total_regions = 5;
  uint32 hydrating_regions = 6;
  string clone_metadata_mode = 7;
}

enum ThinPoolStatus {
  THIN_POOL_STATUS_RW = 0;
  THIN_POOL_STATUS_RO = 1;
  THIN_POOL_STATUS_OODS = 2;
}

message ThinPoolInfo {
  uint64 transaction_id = 1;
  uint64 used_meta_blocks = 2;
  uint64 total_meta_blocks = 3;
  uint64 used_data_blocks = 4;
  uint64 total_data_blocks = 5;
  int32 held_metadata_root = 6;
  ThinPoolStatus status = 7;
  bool discard_passdown = 8;
  bool no_space_queue_or_error = 9;
  bool needs_check = 10;
  uint64 metadata_low_atermark = 11;
}

enum RaidHealthChar {
  RAID_ALIVE_AND_IN_SYNC = 0;
  RAID_ALIVE_NOT_IN_SYNC = 3;
  RAID_DEAD_OR_FAILED = 2;
}

enum RaidSyncAction {
  RAID_ACTION_IDLE = 0;
  RAID_ACTION_FROZEN = 1;
  RAID_ACTION_RESYNC = 2;
  RAID_ACTION_RECOVER = 3;
  RAID_ACTION_CHECK = 4;
  RAID_ACTION_REPAIR = 5;
  RAID_ACTION_RESHAP = 6;
}

enum RaidJournalChar {
  RAID_JOURNAL_ACTIVE_WRITE_THROUGH = 0;
  RAID_JOURNAL_ACTIVE_WRITE_BACK = 1;
  RAID_JOURNAL_DEAD = 2;
  RAID_JOURNAL_NONE = 3;
}

message RedundancyInfo {
  repeated RaidHealthChar health_char = 1;
  uint64 sync_done = 2;
  uint64 sync_total = 3;
  RaidSyncAction sync_action = 4;
  uint64 mismatch_cnt = 5;
  uint64 data_offset = 6;
  RaidJournalChar journal_char = 7;
}

message StatusInfo {
  uint32 code = 1;
  string msg = 2;
  uint64 timestamp = 3;
}

message NextBit {
  uint32 curr_idx = 1;
  bytes bitmap = 2;
}

message ExtentConf {
  uint64 baseAddr = 1;
  repeated uint32 extent_set_bucket = 2;
  bytes bitmap = 3;
}

message DnCapacity {
  uint32 ld_cnt = 1;
  uint32 total_qos = 2;
  uint32 free_qos =3;
  uint32 max_extent_set_size = 4;
  uint32 total_extent_cnt = 5;
}

message CnCapacity {
  uint32 cntlr_cnt = 1;
  uint32 total_qos = 2;
  uint32 free_qos = 3;
}

message DnConf {
  string grpc_target = 1;
  bool online = 2;
  string dev_path = 3;
  NvmePortConf nvme_port_conf = 4;
  DnCapacity dn_capacity = 5;
  ExtentConf meta_extent_conf = 6;
  ExtentConf data_extent_conf = 7;
}

message DnInfo {
  StatusInfo status_info = 1;
}

message CnConf {
  string grpc_target = 1;
  bool online = 2;
  CnCapacity cn_capacity = 3;
  NextBit port_next_bit = 4;
}

message CnInfo {
  StatusInfo status_info = 1;
}

message LdConf {
  uint64 dn_id = 1;
  string dn_grpc_target = 2;
  uint32 position = 3;
  uint32 ld_idx = 4;
}

message LdDnInfo {
  StatusInfo status_info = 3;
}

message LdCnInfo {
  StatusInfo status_info = 3;
}

message LogicalDisk {
  uint64 ld_id = 1;
  LdConf ld_conf = 2;
  LdDnInfo ld_dn_info = 3;
  LdCnInfo ld_cn_info = 4;
}

message GrpConf {
  uint32 grp_idx = 1;
  uint32 extent_cnt = 2;
}

message GrpInfo {
  StatusInfo status_info = 1;
  RedundancyInfo redun_info = 2;
}

message Group {
  uint64 grp_id = 1;
  GrpConf grp_conf = 2;
  GrpInfo grp_info = 3;
  repeated LogicalDisk ld_list = 4;
}

message LegConf {
  uint32 leg_idx = 1;
  uint64 ac_cntlr_id = 2;
}

message RemoteLegInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message LegInfo {
  StatusInfo status_info = 1;
  ThinPoolInfo thin_pool_info = 2;
  repeated RemoteLegInfo remote_leg_info_list = 3;
}

message Leg {
  uint64 leg_id = 1;
  LegConf leg_conf = 2;
  LegInfo leg_info = 3;
  repeated Group grp_list = 4;
}

message SnapConf {
  string snap_name = 1;
  uint32 ori_id = 2;
}

message SnapInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message Snapshot {
  uint32 dev_id = 1;
  SnapConf snap_conf = 2;
  repeated SnapInfo snap_info = 3;
}

message CntlrConf {
  uint64 cn_id = 1;
  string cn_grpc_target = 2;
  uint32 cntlr_idx = 3;
  NvmePortConf nvme_port_conf = 4;
}

message CntlrInfo {
  StatusInfo status_info = 1;
}

message Controller {
  uint64 cntlr_id = 1;
  CntlrConf cntlr_conf = 2;
  CntlrInfo cntlr_info = 3;
}

message MtConf {
  uint64 old_ld_id = 1;
  uint64 new_ld_id = 2;
  CloneConf clone_conf = 3;
}

message MtInfo {
  StatusInfo status_info = 1;
  CloneInfo clone_info = 2;
}

message MovingTask {
  uint64 mt_id = 1;
  MtConf mt_conf = 2;
  MtInfo mt_info = 3;
  LogicalDisk meta_ld = 4;
}

message ItConf {
  uint64 prim_cntlr_id = 1;
  uint32 dev_id = 2;
  NvmeListener nvme_listener = 3;
  uint64 size = 4;
  CloneConf clone_conf = 5;
}

message ItInfo {
  StatusInfo status_info = 1;
  CloneInfo clone_info = 2;
}

message ImportingTask {
  uint64 it_id = 1;
  ItConf it_conf = 2;
  ItInfo it_info = 3;
  LogicalDisk meta_ld = 4;
}

message HostConf {
  string host_nqn = 1;
}

message HostInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message Host {
  uint64 host_id = 1;
  HostConf host_conf = 2;
  repeated HostInfo host_info_list = 3;
}

message NsConf {
  string ns_name = 1;
  uint32 ns_num = 2;
  uint64 size = 3;
  uint32 dev_id = 4;
}

message NsInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message NameSpace {
  uint64 ns_id = 1;
  repeated NsConf ns_conf = 2;
  repeated NsInfo ns_info_list = 3;
}

message SsConf {
  string nqn = 1;
}

message SsInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message SubSystem {
  uint64 ss_id = 1;
  SsConf ss_conf = 2;
  repeated SsInfo ss_info_list = 3;
  repeated NameSpace ns_list = 4;
  repeated Host host_list = 5;
}

message SpConf {
  string sp_name = 1;
  uint64 sp_counter = 2;
  uint32 dev_id_counter = 3;
  uint32 qos = 4;
  StripeConf stripe_conf = 5;
  ThinPoolConf thin_pool_conf = 6;
  RedundancyConf redundancy_conf = 7;
  AllocateConf dn_allocate_conf = 8;
  AllocateConf cn_allocate_conf = 9;
}

// /{dnv_prefix}/cluster
message Cluster {
  uint32 data_extent_size_shift = 1;
  uint32 data_extent_per_set_shift = 2;
  uint32 meta_extent_size_shift = 3;
  uint32 meta_extent_per_set_shift = 4;
  uint32 extent_ratio_shift = 5;
  QosFields qos_unit = 6;
}

// /{dnv_prefix}/dn_global
message DnGlobal {
  uint64 global_counter = 1;
  repeated uint32 extent_set_bucket = 2;
  repeated uint32 shard_bucket = 3;
}

// /{dnv_prefix}/cn_global
message CnGlobal {
  uint64 global_counter = 1;
  repeated uint32 shard_bucket = 2;
}

// /{dnv_prefix}/sp_global
message SpGlobal {
  uint64 global_counter = 1;
  repeated uint32 shard_bucket = 2;
}

// /{dnv_prefix}/dn/{dn_id}
message DiskNode {
  uint64 version = 1;
  repeated Tag tag_list = 2;
  DnConf dn_conf = 3;
  DnInfo dn_info = 4;
  repeated uint64 sp_id_list = 5;
}

// /{dnv_prefix}/cn/{cn_id}
message ControllerNode {
  uint64 version = 1;
  repeated Tag tag_list = 2;
  CnConf cn_conf = 3;
  CnInfo cn_info = 4;
  repeated uint64 sp_id_list = 5;
}

// /{dnv_prefix}/sp/{sp_id}
message StoragePool {
  uint64 version = 1;
  repeated Tag tag_list = 2;
  SpConf sp_conf = 3;
  repeated SubSystem ss_list = 4;
  repeated Snapshot snap_list = 5;
  repeated Leg leg_list = 6;
  repeated Controller cntlr_list = 7;
  repeated MovingTask mt_list = 8;
  repeated ImportingTask it_list = 9;
}

// /{dnv_prefix}/name_to_id/{name}
message NameToId {
  uint64 res_id = 1;
}

// /{dnv_prefix}/tag_key/{tag_key}
message TagKey {
  repeated string value_list = 1;
}

// /{dnv_prefix}/tag_value/{tag_key}/{tag_value}
message TagValue {
  repeated string dn_id_list = 4;
  repeated string cn_id_list = 5;
  repeated string sp_id_list = 6;
}

message ReplyInfo {
  uint32 reply_code = 1;
  string reply_msg = 2;
}

message DnSummary {
  uint32 total_dn_cnt = 1;
  uint32 total_data_extent_cnt = 2;
  uint32 free_data_extent_cnt = 3;
  uint32 total_meta_extent_cnt = 4;
  uint32 free_meta_extent_cnt = 5;
  uint32 total_qos = 6;
  uint32 free_qos = 7;
  uint32 total_ld_cnt = 8;
}

message CnSummary {
  uint32 total_cn_cnt = 1;
  uint32 total_qos = 2;
  uint32 free_qos = 3;
  uint32 total_cntlr_cnt = 4;
}

message SpSummary {
  uint32 total_sp_cnt = 1;
  uint32 total_ss_cnt = 2;
  uint32 total_ns_cnt = 3;
  uint32 total_active_cntlr_cnt = 4;
  uint32 total_standby_cntlr_cnt = 5;
  uint32 total_snap_cnt =6;
  uint32 total_leg_cnt = 7;
  uint32 total_grp_cnt = 8;
  uint32 total_ld_cnt = 9;
  uint32 total_data_extent_cnt = 10;
  uint32 total_meta_extent_cnt = 11;
  uint32 total_mt_cnt = 12;
  uint32 total_it_cnt = 13;
}

message AddTagReq {
  Tag tag = 1;
}

message DelTagReq {
  Tag tag = 1;
}

message CreateClusterRequest {
}

message CreateClusterReply {
  ReplyInfo reply_info = 1;
}

message DeleteClusterRequest {
}

message DeleteClusterReply {
  ReplyInfo reply_info = 1;
}

message GetClusterRequest {
}

message GetClusterReply {
  ReplyInfo reply_info = 1;
  Cluster cluster = 2;
}

message CreateDnRequest {
  string grpc_target = 1;
  string dev_path = 2;
  uint32 port_num = 3;
  string tr_type = 4;
  string adr_fam = 5;
  string tr_addr = 6;
  string tr_svc_id = 7;
  repeated Tag tag_list = 8;
}

message CreateDnReply {
  ReplyInfo reply_info = 1;
  uint64 dn_id = 2;
}

message DeleteDnRequest {
  uint64 dn_id = 1;
}

message DeleteDnReply {
  ReplyInfo reply_info = 1;
}

message GetDnRequest {
  oneof name {
    string grpc_target = 1;
    uint64 dn_id = 2;
  }
}

message GetDnReply {
  ReplyInfo reply_info = 1;
}

message ListDnRequest {
  int64 limit = 1;
  uint64 prev_dn_id = 2;
}

message ListDnReply {
  ReplyInfo reply_info = 1;
  repeated uint64 dn_id_list = 2;
}

message ModifyDnRequest {
  uint64 dn_id = 1;
  oneof sub_req {
    Tag added_tag = 2;
    Tag removed_tag = 3;
    bool online = 4;
  }
}

message ModifyDnReply {
  ReplyInfo reply_info = 1;
}

message WorkerInfo {
  sint64 revision = 1;
  bytes owned_shards = 2;
}

message AllocateDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
  string distinguish_key = 3;
  uint32 dn_cnt = 4;
  uint32 extent_per_dn_cnt = 5;
}

message DnAllocationItem {
  uint64 dn_id = 1;
  string distinguish_value = 2;
}

message AllocateDnReply {
  ReplyInfo reply_info = 1;
  WorkerInfo worker_info = 2;
  repeated DnAllocationItem dn_allocation_item = 3;
}

message SummarizeDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
  string group_by_key = 3;
  bytes shards = 4;
}

message DnSummaryItem {
  string group_by_value = 1;
  DnSummary dn_summary = 2;
}

message PerShardDnSummary {
  uint32 shard_id = 1;
  repeated DnSummaryItem dn_summary_item_list = 2;
}

message SummarizeDnReply {
  ReplyInfo reply_info = 1;
  WorkerInfo worker_info = 2;
  repeated PerShardDnSummary per_shard_dn_summary_list = 3;
}

message FilterDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
}

message DnTagItem {
  uint64 dn_id = 1;
  repeated Tag tag_list = 2;
}

message PerShardDnTag {
  uint32 shard_id = 1;
  repeated DnTagItem dn_tag_item_list = 2;
}

message FilterDnReply {
  ReplyInfo reply_info = 1;
  WorkerInfo worker_info = 2;
  repeated PerShardDnTag filter_dn_item_list = 3;
}
