syntax = "proto3";

option go_package = "github.com/distributed-nvme/distributed-nvme/pkg/proto/controlplane";

package controlplane;

service ExternalApi {
  rpc CreateCluster(CreateClusterRequest) returns(CreateClusterReply) {}
  rpc DeleteCluster(DeleteClusterRequest) returns(DeleteClusterReply) {}
  rpc GetCluster(GetClusterRequest) returns(GetClusterReply) {}

  rpc CreateDn(CreateDnRequest) returns(CreateDnReply) {}
  rpc DeleteDn(DeleteDnRequest) returns(DeleteDnReply) {}
  rpc GetDn(GetDnRequest) returns(GetDnReply) {}
}

service DiskNodeWorker {
  rpc AllocateDn(AllocateDnRequest) returns(AllocateDnReply) {}
  rpc SummaryDn(SummaryDnRequest) returns(SummaryDnReply) {}
  rpc FilterDn(FilterDnRequest) returns(FilterDnReply) {}
}

message ReplyInfo {
  uint32 reply_code = 1;
  string reply_msg = 2;
}

message QosFields {
  uint64 rbps = 1;
  uint64 wbps = 2;
  uint64 riops = 3;
  uint64 wiops = 4;
}

enum NvmeSeqCh {
  NVME_SEQ_CH_NOT_SPECIFIED = 0;
  NVME_SEQ_CH_REQUIRED = 1;
  NVME_SEQ_CH_NOT_REQUIRED = 2;
}

message NvmeTReq {
  NvmeSeqCh seq_ch = 1;
}

message NvmeListener {
  string tr_type = 1;
  string adr_fam = 2;
  string tr_addr = 3;
  string tr_svc_id = 4;
}

message NvmePortConf {
  uint32 port_num = 1;
  NvmeListener nvme_listener = 2;
  NvmeTReq tr_eq = 3;
}

message Tag {
  string key = 1;
  string value = 2;
}

message DnSummary {
  uint32 total_dn_cnt = 1;
  uint32 total_data_extent_cnt = 2;
  uint32 free_data_extent_cnt = 3;
  uint32 total_meta_extent_cnt = 4;
  uint32 free_meta_extent_cnt = 5;
  uint64 total_qos = 6;
  uint64 free_qos = 7;
  uint32 total_ld_cnt = 8;
}

message CnSummary {
  uint32 total_cn_cnt = 1;
  uint32 total_qos = 2;
  uint32 free_qos = 3;
  uint32 total_cntlr_cnt = 4;
}

message SpSummary {
  uint32 total_sp_cnt = 1;
  uint32 total_ss_cnt = 2;
  uint32 total_ns_cnt = 3;
  uint32 total_active_cntlr_cnt = 4;
  uint32 total_standby_cntlr_cnt = 5;
  uint32 total_snap_cnt =6;
  uint32 total_leg_cnt = 7;
  uint32 total_grp_cnt = 8;
  uint32 total_ld_cnt = 9;
  uint32 total_data_extent_cnt = 10;
  uint32 total_meta_extent_cnt = 11;
  uint32 total_mt_cnt = 12;
  uint32 total_it_cnt = 13;
}

message Cluster {
  uint32 data_extent_size_shift = 1;
  uint32 data_extent_per_set_shift = 2;
  uint32 meta_extent_size_shift = 3;
  uint32 meta_extent_per_set_shift = 4;
  uint32 extent_ratio_shift = 5;
  QosFields qos_unit = 6;
}

message CreateClusterRequest {
}

message CreateClusterReply {
  ReplyInfo reply_info = 1;
}

message DeleteClusterRequest {
}

message DeleteClusterReply {
  ReplyInfo reply_info = 1;
}

message GetClusterRequest {
}

message GetClusterReply {
  ReplyInfo reply_info = 1;
  Cluster cluster = 2;
}

message DiskNode {
  string grpc_target = 1;
  bool online = 2;
  string dev_path = 3;
}

message CreateDnRequest {
  string grpc_target = 1;
  string dev_path = 2;
  NvmePortConf port_conf = 3;
  repeated Tag tag_list = 4;
}

message CreateDnReply {
  ReplyInfo reply_info = 1;
}

message DeleteDnRequest {
  string grpc_target = 1;
}

message DeleteDnReply {
  ReplyInfo reply_info = 1;
}

message GetDnRequest {
  string grpc_target = 1;
}

message GetDnReply {
  ReplyInfo reply_info = 1;
}

message AllocateDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
  string distinguish_key = 3;
  uint32 dn_cnt = 4;
  uint32 extent_per_dn_cnt = 5;
}

message AllocateDnItem {
  uint64 dn_id = 1;
  string distinguish_value = 2;
}

message AllocateDnReply {
  repeated AllocateDnItem allocate_dn_item_list = 1;
}

message SummaryDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
  string group_by_key = 3;
}

message SummaryDnItem {
  string group_by_value = 1;
  DnSummary dn_summary = 2;
}

message SummaryDnReply {
  bool truncated = 1;
  repeated SummaryDnItem summary_dn_item_list = 2;
}

message FilterDnRequest {
  repeated Tag include_tag_list = 1;
  repeated Tag exclude_tag_list = 2;
}

message FilterDnItem {
  uint64 dn_id = 1;
  repeated Tag tag_list = 2;
}

message FilterDnReply {
  bool truncated = 1;
  repeated FilterDnItem filter_dn_item_list = 2;
}
