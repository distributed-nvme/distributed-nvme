syntax = "proto3";

option go_package = "github.com/distributed-nvme/distributed-nvme/pkg/proto/controlplane";

package controlplane;

service ExternalApi {
  rpc CreateCluster(CreateClusterRequest) returns(CreateClusterReply) {}
  rpc DeleteCluster(DeleteClusterRequest) returns(DeleteClusterReply) {}
  // rpc ModifyCluster(ModifyClusterRequest) returns(ModifyClusterReply) {}
  // rpc ListCluster(ListClusterRequest) returns(ListClusterReply) {}
  rpc GetCluster(GetClusterRequest) returns(GetClusterReply) {}

  rpc CreateDn(CreateDnRequest) returns(CreateDnReply) {}
  rpc DeleteDn(DeleteDnRequest) returns(DeleteDnReply) {}
  // rpc ModifyDn(ModifyDnRequest) returns(ModifyDnReply) {}
  // rpc ListDn(ListDnRequest) returns(ListDnReply) {}
  rpc GetDn(GetDnRequest) returns(GetDnReply) {}

  // rpc CreateCn(CreateCnRequest) returns(CreateCnReply) {}
  // rpc DeleteCn(DeleteCnRequest) returns(DeleteCnReply) {}
  // rpc ModifyCn(ModifyCnRequest) returns(ModifyCnReply) {}
  // rpc ListCn(ListCnRequest) returns(ListCnReply) {}
  // rpc GetCn(GetCnRequest) returns(GetCnReply) {}

  // rpc CreateSp(CreateSpRequest) returns(CreateSpReply) {}
  // rpc DeleteSp(DeleteSpRequest) returns(DeleteSpReply) {}
  // rpc ModifySp(ModifySpRequest) returns(ModifySpReply) {}
  // rpc ListSp(ListSpRequest) returns(ListSpReply) {}
  // rpc GetSp(GetSpRequest) returns(GetSpReply) {}

  // rpc CreateSnap(CreateSnapRequest) returns(CreateSnapReply) {}
  // rpc DeleteSnap(DeleteSnapRequest) returns(DeleteSnapReply) {}
  // rpc ModifySnap(ModifySnapRequest) returns(ModifySnapReply) {}
  // rpc ListSnap(ListSnapRequest) returns(ListSnapReply) {}
  // rpc GetSnap(GetSnapRequest) returns(GetSnapReply) {}

  // rpc CreateSs(CreateSsRequest) returns(CreateSsReply) {}
  // rpc DeleteSs(DeleteSsRequest) returns(DeleteSsReply) {}
  // rpc ModifySs(ModifySsRequest) returns(ModifySsReply) {}
  // rpc ListSs(ListSsRequest) returns(ListSsReply) {}
  // rpc GetSs(GetSsRequest) returns(GetSsReply) {}

  // rpc CreateNs(CreateNsRequest) returns(CreateNsReply) {}
  // rpc DeleteNs(DeleteNsRequest) returns(DeleteNsReply) {}
  // rpc ModifyNs(ModifyNsRequest) returns(ModifyNsReply) {}
  // rpc ListNs(ListNsRequest) returns(ListNsReply) {}
  // rpc GetNs(GetNsRequest) returns(GetNsReply) {}

  // rpc CreateExp(CreateExpRequest) returns(CreateExpReply) {}
  // rpc DeleteExp(DeleteExpRequest) returns(DeleteExpReply) {}
  // rpc ModifyExp(ModifyExpRequest) returns(ModifyExpReply) {}
  // rpc ListExp(ListExpRequest) returns(ListExpReply) {}
  // rpc GetExp(GetExpRequest) returns(GetExpReply) {}

  // rpc CreateMt(CreateMtRequest) returns(CreateMtReply) {}
  // rpc CancelMt(CancelMtRequest) returns(CancelMtReply) {}
  // rpc ModifyMt(ModifyMtRequest) returns(ModifyMtReply) {}
  // rpc ListMt(ListMtRequest) returns(ListMtReply) {}
  // rpc GetMt(GetMtRequest) returns(GetMtReply) {}

  // rpc CreateIt(CreateItRequest) returns(CreateItReply) {}
  // rpc CancelIt(CancelItRequest) returns(CancelItReply) {}
  // rpc ModifyIt(ModifyItRequest) returns(ModifyItReply) {}
  // rpc ListIt(ListItRequest) returns(ListItReply) {}
  // rpc GetIt(GetItRequest) returns(GetItReply) {}

  // rpc CreateLdPh(CreateLdPhRequest) returns(CreateLdPhReply) {}
  // rpc DeleteLdPh(DeleteLdPhRequest) returns(DeleteLdPhReply) {}
  // rpc ModifyLdPh(ModifyLdPhRequest) returns(ModifyLdPhReply) {}
  // rpc ListLdPh(ListLdPhRequest) returns(ListLdPhReply) {}
  // rpc GetLdPh(GetLdPhRequest) returns(GetLdPhReply) {}

  // rpc CreateCntlrPh(CreateCntlrPhRequest) returns(CreateCntlrPhReply) {}
  // rpc DeleteCntlrPh(DeleteCntlrPhRequest) returns(DeleteCntlrPhReply) {}
  // rpc ModifyCntlrPh(ModifyCntlrPhRequest) returns(ModifyCntlrPhReply) {}
  // rpc ListCntlrPh(ListCntlrPhRequest) returns(ListCntlrPhReply) {}
  // rpc GetCntlrPh(GetCntlrPhRequest) returns(GetCntlrPhReply) {}
}

service DiskNodeWorker {
  rpc GetDnBatch(GetDnBatchRequest) returns(GetDnBatchReply) {}
}

message ReplyInfo {
  uint32 reply_code = 1;
  string reply_msg = 2;
}

message QosFields {
  uint64 rbps = 1;
  uint64 wbps = 2;
  uint64 riops = 3;
  uint64 wiops = 4;
}

enum NvmeSeqCh {
  NVME_SEQ_CH_NOT_SPECIFIED = 0;
  NVME_SEQ_CH_REQUIRED = 1;
  NVME_SEQ_CH_NOT_REQUIRED = 2;
}

message NvmeTReq {
  NvmeSeqCh seq_ch = 1;
}

message NvmeListener {
  string tr_type = 1;
  string adr_fam = 2;
  string tr_addr = 3;
  string tr_svc_id = 4;
}

message NvmePortConf {
  uint32 port_num = 1;
  NvmeListener nvme_listener = 2;
  NvmeTReq tr_eq = 3;
}

message Cluster {
  uint32 data_extent_size_shift = 1;
  uint32 data_extent_per_set_shift = 2;
  uint32 meta_extent_size_shift = 3;
  uint32 meta_extent_per_set_shift = 4;
  uint32 extent_ratio_shift = 5;
  QosFields qos_unit = 6;
}

message CreateClusterRequest {
}

message CreateClusterReply {
  ReplyInfo reply_info = 1;
}

message DeleteClusterRequest {
}

message DeleteClusterReply {
  ReplyInfo reply_info = 1;
}

message GetClusterRequest {
}

message GetClusterReply {
  ReplyInfo reply_info = 1;
  Cluster cluster = 2;
}

message DiskNode {
  string grpc_target = 1;
  bool online = 2;
  string dev_path = 3;
}

message CreateDnRequest {
  string grpc_target = 1;
  string dev_path = 2;
  NvmePortConf port_conf = 3;
}

message CreateDnReply {
  ReplyInfo reply_info = 1;
}

message DeleteDnRequest {
  string grpc_target = 1;
}

message DeleteDnReply {
  ReplyInfo reply_info = 1;
}

message GetDnRequest {
  string grpc_target = 1;
}

message GetDnReply {
  ReplyInfo reply_info = 1;
}

message GetDnBatchRequest {
}

message GetDnBatchReply{
  ReplyInfo reply_info = 1;
}
