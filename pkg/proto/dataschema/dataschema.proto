syntax = "proto3";

option go_package = "github.com/distributed-nvme/distributed-nvme/pkg/proto/dataschema";

package dataschema;

message ClusterConf {
  uint64 global_counter = 1;
  string nqn_prefix = 2;
  string dev_prefix = 3;
  uint32 thin_block_size = 4;
  uint32 raid_region_size = 5;
  uint32 raid_stripe_size = 6;
}

enum NvmeSeqCh {
  NVME_SEQ_CH_NOT_SPECIFIED = 0;
  NVME_SEQ_CH_REQUIRED = 1;
  NVME_SEQ_CH_NOT_REQUIRED = 2;
}

message NvmeTReq {
  NvmeSeqCh seq_ch = 1;
}

message NvmeListener {
  string tr_type = 1;
  string adr_fam = 2;
  string tr_addr = 3;
  string tr_svc_id = 4;
}

message NvmePortConf {
  uint32 port_id = 1;
  NvmeListener nvme_listener = 2;
  NvmeTReq tr_eq = 3;
}

message StatusInfo {
  uint32 status_code = 1;
  string status_msg = 2;
  uint64 timestamp = 3;
  uint64 node_id = 4;
}

message Qos {
  uint64 rbps = 1;
  uint64 wbps = 2;
  uint64 riops = 3;
  uint64 wiops = 4;
}

message Location {
  repeated string pos_list = 1;
}

message DnCapacity {
  uint32 total_cnt = 1;
  uint32 free_cnt = 2;
  Qos total_qos = 3;
  Qos free_qos = 4;
  uint64 total_size = 5;
  uint64 free_size = 6;
}

message CnCapacity {
  uint32 total_cnt = 1;
  uint32 free_cnt = 2;
  Qos total_qos = 3;
  Qos free_qos = 4;
}

message DnConf {
  string sock_addr = 1;
  uint32 shard_code = 2;
  bool online = 3;
  Location location = 4;
  string dev_path = 5;
  DnCapacity dn_capacity = 6;
  uint32 prev_port_idx = 7;
  repeated uint64 port_idx_bitmap = 8;
  uint32 prev_nvmet_cntlid = 9;
  repeated uint64 cntlid_bitmap = 10;
}

message DnInfo {
  StatusInfo status_info = 1;
}

message CnConf {
  string sock_addr = 1;
  uint32 shard_code = 2;
  bool online = 3;
  Location location = 4;
  CnCapacity cn_capacity = 5;
  uint32 prev_port_idx = 6;
  repeated uint64 port_idx_bitmap = 7;
  uint32 prev_nvmet_cntlid = 8;
  repeated uint64 cntlid_bitmap = 9;
}

message CnInfo {
  StatusInfo status_info = 1;
}

message LdConf {
  uint64 dn_id = 1;
  NvmePortConf nvme_port_conf = 2;
  uint64 start = 3;
  uint64 length = 4;
  uint32 ld_idx = 5;
}

message LdFeInfo {
  StatusInfo status_info = 3;
}

message LdBeInfo {
  StatusInfo status_info = 3;
}

message LogicalDisk {
  uint64 ld_id = 1;
  LdConf ld_conf = 2;
  LdFeInfo ld_fe_info = 3;
  LdBeInfo ld_be_info = 4;
}

enum RedunType {
  REDUN_RAID1 = 0;
  REDUN_RAID5_LA = 1;
  REDUN_RAID5_RA = 2;
  REDUN_RAID5_LS = 3;
  REDUN_RAID5_RS = 4;
  REDUN_RAID6_ZR = 5;
  REDUN_RAID6_NR = 6;
  REDUN_RAID6_NC = 7;
}

enum RedunJournalMode {
  REDUN_JOURNAL_NONE = 0;
  REDUN_JOURNAL_WRITEBACK = 1;
  REDUN_JOURNAL_WRITETHROUGH = 2;
}

message RedundancyConf {
  RedunType redun_type = 1;
  uint32 region_size = 2;
  uint32 chunk_size = 3;
  uint32 daemon_sleep = 4;
  uint32 min_recovery_rate = 5;
  uint32 max_recovery_rate = 6;
  uint32 stripe_cache = 7;
  RedunJournalMode journal_mode = 8;
}

message StripeConf {
  uint32 stripe_size = 1;
}

message ThinPoolConf {
  uint32 data_block_size = 1;
  uint32 low_water_mark = 2;
  bool error_if_no_space = 3;
}

message ExtendPolicy {
  uint64 init_grp_size = 1;
  uint64 max_grp_size = 2;
}

message ThinInfo {
  bool fail = 1;
}

message CloneConf {
  uint32 region_size = 1;
  uint32 hydration_threshold = 2;
  uint32 hydration_batch_size = 3;
}

message CloneInfo {
  uint32 metadata_block_size = 1;
  uint32 used_metadata_blocks = 2;
  uint32 total_metadata_blocks = 3;
  uint32 hydrated_regions = 4;
  uint32 total_regions = 5;
  uint32 hydrating_regions = 6;
  string clone_metadata_mode = 7;
}

enum ThinPoolStatus {
  THIN_POOL_STATUS_RW = 0;
  THIN_POOL_STATUS_RO = 1;
  THIN_POOL_STATUS_OODS = 2;
}

message ThinPoolInfo {
  uint64 transaction_id = 1;
  uint64 used_meta_blocks = 2;
  uint64 total_meta_blocks = 3;
  uint64 used_data_blocks = 4;
  uint64 total_data_blocks = 5;
  int32 held_metadata_root = 6;
  ThinPoolStatus status = 7;
  bool discard_passdown = 8;
  bool no_space_queue_or_error = 9;
  bool needs_check = 10;
  uint64 metadata_low_atermark = 11;
}

enum RaidHealthChar {
  RAID_ALIVE_AND_IN_SYNC = 0;
  RAID_ALIVE_NOT_IN_SYNC = 3;
  RAID_DEAD_OR_FAILED = 2;
}

enum RaidSyncAction {
  RAID_ACTION_IDLE = 0;
  RAID_ACTION_FROZEN = 1;
  RAID_ACTION_RESYNC = 2;
  RAID_ACTION_RECOVER = 3;
  RAID_ACTION_CHECK = 4;
  RAID_ACTION_REPAIR = 5;
  RAID_ACTION_RESHAP = 6;
}

enum RaidJournalChar {
  RAID_JOURNAL_ACTIVE_WRITE_THROUGH = 0;
  RAID_JOURNAL_ACTIVE_WRITE_BACK = 1;
  RAID_JOURNAL_DEAD = 2;
  RAID_JOURNAL_NONE = 3;
}

message RedundancyInfo {
  repeated RaidHealthChar health_char = 1;
  uint64 sync_done = 2;
  uint64 sync_total = 3;
  RaidSyncAction sync_action = 4;
  uint64 mismatch_cnt = 5;
  uint64 data_offset = 6;
  RaidJournalChar journal_char = 7;
}

message GrpConf {
  uint32 grp_idx = 1;
  uint64 grp_size = 2;
}

message GrpInfo {
  StatusInfo status_info = 1;
  RedundancyInfo redun_info = 2;
}

message Group {
  uint64 grp_id = 1;
  GrpConf grp_conf = 2;
  GrpInfo grp_info = 3;
  repeated LogicalDisk ld_list = 4;
}

message LegConf {
  uint32 leg_idx = 1;
  uint64 ac_cntlr_id = 2;
}

message RemoteLegInfo {
  uint64 cntlr_id = 1;
  StatusInfo status_info = 2;
}

message LegInfo {
  StatusInfo status_info = 1;
  ThinPoolInfo thin_pool_info = 2;
  repeated RemoteLegInfo remote_leg_info_list = 3;
}

message Leg {
  uint64 leg_id = 1;
  LegConf leg_conf = 2;
  LegInfo leg_info = 3;
  repeated Group grp_list = 4;
}

message HostConf {
  string host_nqn = 1;
}

message HostInfo {
  StatusInfo status_info = 1;
}

message Host {
  uint64 host_id = 1;
  HostConf host_conf = 2;
  HostInfo host_info = 3;
}

message SnapConf {
  string snap_name = 1;
  uint32 ori_id = 2;
}

message SnapInfo {
  StatusInfo status_info = 1;
}

message Snapshot {
  uint32 dev_id = 1;
  SnapConf snap_conf = 2;
  SnapInfo snap_info = 3;
}

message NsConf {
  uint32 ns_id = 1;
  uint64 size = 2;
  uint32 dev_id = 3;
}

message NsInfo {
  StatusInfo status_info = 1;
}

message CntlrConf {
  uint64 cn_id = 1;
  uint32 nvmet_cntlid = 2;
  NvmePortConf nvme_port_conf = 3;
}

message CntlrInfo {
  StatusInfo status_info = 1;
  repeated NsInfo ns_info = 2;
}

message Controller {
  uint64 cntlr_id = 1;
  CntlrConf cntlr_conf = 2;
  CntlrInfo cntlr_info = 3;
}

message MtConf {
  uint64 old_ld_id = 1;
  uint64 new_ld_id = 2;
  CloneConf clone_conf = 3;
}

message MtInfo {
  StatusInfo status_info = 1;
  CloneInfo clone_info = 2;
}

message MovingTask {
  uint64 mt_id = 1;
  MtConf mt_conf = 2;
  MtInfo mt_info = 3;
  LogicalDisk meta_ld = 4;
}

message ItConf {
  uint64 prim_cntlr_id = 1;
  uint32 dev_id = 2;
  NvmeListener nvme_listener = 3;
  uint64 size = 4;
  CloneConf clone_conf = 5;
}

message ItInfo {
  StatusInfo status_info = 1;
  CloneInfo clone_info = 2;
}

message ImportingTask {
  uint64 it_id = 1;
  ItConf it_conf = 2;
  ItInfo it_info = 3;
  LogicalDisk meta_ld = 4;
}

message SsConf {
  string ss_name = 1;
  uint32 shard_code = 2;
  uint64 ss_counter = 3;
  uint32 dev_id_counter = 4;
  Qos qos = 5;
  StripeConf stripe_conf = 6;
  ThinPoolConf thin_pool_conf = 7;
  RedundancyConf redundancy_conf = 8;
  ExtendPolicy extend_policy = 9;
  uint32 dn_loc_level = 10;
  uint32 cn_loc_level = 11;
}

// {dnv_prefix}/version/dn/{dn_id}
// {dnv_prefix}/version/cn/{cn_id}
// {dnv_prefix}/version/da/{da_id}
message Version {
  uint64 version = 1;
}

// {dnv_prefix}/ss/{ss_id}
message DiskNode {
  uint64 dn_id = 1;
  DnConf dn_conf = 2;
  DnInfo dn_info = 3;
  repeated uint64 ss_id_list = 4;
}

// {dnv_prefix}/cn/{cn_id}
message ControllerNode {
  uint64 cn_id = 1;
  CnConf cn_conf = 2;
  CnInfo cn_info = 3;
  repeated uint64 ss_id_list = 4;
}

// {dnv_prefix}/ss/{ss_id}
message SubSystem {
  uint64 ss_id = 1;
  SsConf ss_conf = 2;
  repeated NsConf ns_conf = 3;
  repeated Snapshot snap_list = 4;
  repeated Leg leg_list = 5;
  repeated Controller cntlr_list = 6;
  repeated Host host_list = 7;
  repeated MovingTask mt_list = 8;
  repeated ImportingTask it_list = 9;
}

// {dnv_prefix}/name_to_id/{name}
message NameToId {
  uint64 res_id = 1;
}

// {dnv_prefix}capacity/dn/{free_cnt@dn_id}
message DnSearchAttr {
  DnCapacity dn_capacity = 1;
  Location location = 2;
}

// {dnv_prefix}/capacity/cn/{free_cnt@cn_id}
message CnSearchAttr {
  CnCapacity cn_capacity = 1;
  Location location = 2;
}

// {dnv_prefix}/list/dn/{shard_code#dn_id}
message DnSockAddr {
  string sock_addr = 1;
}

// {dnv_prefix}/list/cn/{shard_code#cn_id}
message CnSockAddr {
  string sock_addr = 1;
}

// {dnv_prefix}/list/da/{shard_code#da_id}
message DaName {
  string da_name = 1;
}
